<%- include("layout/header.ejs"); %>
<style>
    .__date-edit {
        display: none;
    }
</style>
<div class="main">
    <nav>
        <div class="nav-wrapper teal lighten-2">
            <div class="container">
                <ul id="nav-mobile" class="right">
                    <li><a href="/">На главную</a></li>
                    <li><a href="/admin/">Список лет</a></li>
                    <li><a href="/admin/month/<%= year.id_year %>">Список месяцев</a></li>
                    <li><a href="/auth/logout">Выйти</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">

        <!-- Список дат -->
        <section class="date">
            <div class="row __date">
                <!-- Заголовок формы -->
                <div class="col s12 m12">
                    <h2 class="left-align">Список дат</h2>
                </div>
                <!-- end point `заголовок формы` -->

                <!-- Форма создания даты -->
                <form name="createForm" class="col s12 m12">
                    <div class="row">
                        <div class="input-field col s12 m12">
                            <input type="text" class="datepicker" placeholder="Выберите дату">
                        </div>
                        <div class="submit-field col s12 m12">
                            <button id="submitCreateDate" class="btn waves-effect waves-light" type="submit" name="action">Сохранить
                                <i class="material-icons right">send</i>
                            </button>
                            <button class="waves-effect waves-light btn" type="reset">Сбросить</button>
                        </div>
                    </div>
                </form>
                <!-- end point `форма создания даты` -->
            </div>

            <!-- Таблица со списком дат -->
            <div class="row __date">
                <div class="col s12 m12">
                    <table id="tableDate" value="<%= id_month %>" class="highlight">
                        <thead>
                          <tr>
                              <th class="hide-on-small-only">Id</th>
                              <th>Дата</th>
                              <th>Операции</th>
                          </tr>
                        </thead>
                        <tbody>
                            <% for ( let iterator of docs ) { %>
                                <tr id="tr__<%= iterator._id %>">
                                    <!-- ячейка с `ID` -->
                                    <td class="hide-on-small-only">
                                        <%= iterator._id %>
                                    </td>
                                    <!-- ячейка со значением месяца -->
                                    <td id="td__<%= iterator._id %>">
                                        <a href="/admin/lesson/<%= iterator._id %>"><%= new Date(iterator.full_date).getDate() %></a>
                                    </td>
                                    <!-- ячейка с операциями -->
                                    <td>
                                        <a onclick="editSelectDate('<%= iterator._id %>')" class="editLink waves-effect waves-light btn"><i class="small material-icons">edit</i></a>
                                        <a onclick="delSelectDate('<%= iterator._id %>')" class="removeLink waves-effect waves-light btn"><i class="small material-icons">delete</i></a>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                      </table>
                </div>
            </div>
            <!-- end point `таблица со списком дат` -->

            <div class="row __date-edit">
                <!-- Заголовок формы -->
                <div class="col s12 m12">
                    <h2 class="left-align">Форма изменения данных</h2>
                </div>
                <!-- end point `заголовок формы` -->

                <!-- Форма редактирования -->
                <form name="editForm" class="col s12 m12">
                    <div class="row">
                        <div class="input-field col s12 m12">
                            <input type="text" class="datepicker" placeholder="Выберите дату">
                        </div>
                        <div class="submit-field col s12 m12">
                            <button id="submitEditDate" class="btn waves-effect waves-light" type="submit" name="action">Сохранить
                                <i class="material-icons right">send</i>
                            </button>
                            <button class="waves-effect waves-light btn" type="reset">Сбросить</button>
                            <button onclick="triggerForm()" class="waves-effect waves-light btn" type="reset">Не изменять данные</button>
                        </div>
                    </div>
                </form>
                <!-- End point `форма редактирования` -->
            </div>
        </section>
        <!-- End point `cписок дат` -->
        
    </div>
</div>

<!-- <script src="/javascripts/date.min.js"></script> -->
<script>
    /*
    * the `DatePicker` HTML element initialization
    */
    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('.datepicker');
        var options = {
            disableWeekends: true,
            i18n: {
                months: [
                    'Январь',
                    'Февраль',
                    'Март',
                    'Апрель',
                    'Май',
                    'Июнь',
                    'Июль',
                    'Август',
                    'Сентябрь',
                    'Октябрь',
                    'Ноябрь',
                    'Декабрь'
                ],
                weekdaysAbbrev: ['В','П','В','С','Ч','П','С']
            },
        };
        M.Datepicker.init(elems, options);
    });
    /*
    * End point "the `DatePicker` HTML element initialization"
    */

    function checkValue(v) {
        if(v) {
            return true;
        } else {
            M.toast({ html: "Вы не выбрали дату!" });
        }
    }

    /*
    * To create date
    */
    document.getElementById("submitCreateDate").addEventListener("click", function(e) {
        e.preventDefault();
        // to get of the `datepicker` value
        var datePicker = document.querySelector(".datepicker");

        if(checkValue(datePicker.value)) {
            var xhr = new XMLHttpRequest(), // the XHR class instance creation
                url = "/admin/date",
                id_month = document.getElementById("tableDate").getAttribute("value"),
                full_date = new Date(datePicker.value),
                data = JSON.stringify({ id_month, full_date });
           
            xhr.open("POST", url, true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.addEventListener("load", function() {
                // receive and parse the server response
                var json = JSON.parse(xhr.response);

                if(xhr.readyState == 4 && xhr.status == 200) {
                    datePicker.value = "";
                    addRowToTable.call(json.docs);
                } else {
                    console.log(json.msg);
                }
            });

            xhr.send(data);
        }
    });

    function addRowToTable() {
        let table = document.getElementById("tableDate"),
            row = table.insertRow(table.length);
        
        // filling the created row with cells
        let cellId = row.insertCell(0),
            cellDate = row.insertCell(1),
            cellOperation = row.insertCell(2);

        // setting the required attributes
        row.setAttribute("id", `tr__${this._id}`);
        cellId.setAttribute("class", "hide-on-small-only")
        cellDate.setAttribute("id", `td__${this._id}`);

        // filling the cells with entered values
        cellId.innerHTML = `${this._id}`;
        cellDate.innerHTML = `<a href="/admin/lesson/${this._id}">${getFormatDate(this.full_date)}</a>`;
        cellOperation.innerHTML = getOperation.call(this);
        getFormatDate(this.full_date);
    }

    function getFormatDate(v) {
        var date = new Date(v);
        return date.getDate();
    }

    function getOperation() {
        var { _id } = this;

        var opEdit = `<a onclick="editSelectDate('${_id}')" class="waves-effect waves-light btn"><i class="editLink small material-icons">edit</i></a>`,
            opDelete = `<a onclick="delSelectDate('${_id}')" class="waves-effect waves-light btn"><i class="small material-icons">delete</i></a>`,
            op = opEdit + " " + opDelete;
        
        return op;
    }

    // to delete the selected year
    function delSelectDate(id) {
        let url = `/admin/date/${ id }`;

        // the XHR class instance creation
        let xhr = new XMLHttpRequest();
        
        // send a request to delete the selected year
        xhr.open('DELETE', url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.addEventListener("load", function () {
            // receive and parse the server response
            let json = JSON.parse(xhr.response);
                
            if(xhr.readyState == 4 && xhr.status == 200) {
                document.getElementById(`tr__${id}`).remove();
            } else {
                console.log(json.msg);
            }
        });

        xhr.send(null);
    }
    /*
    * End point `To create date`
    */

    /*
    * To edit the selected date
    */
    function editSelectDate(id) {
        var url = `/admin/date/select/${id}`,
            xhr = new XMLHttpRequest(); // the XHR class instance creation

        // send a request to select the selected year
        xhr.open("GET", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.addEventListener("load", function() {
            // receive and parse the server response
            var json = JSON.parse(xhr.response);
            
            if(xhr.readyState == 4 && xhr.status == 200) {
                triggerForm(true);  // to show the `editForm` HTML element of selected year
                /*
                * to set the attribute and value of the `select` HTML element
                */
                let selectEditForm = document.forms["editForm"].querySelector(".datepicker");
                document.forms["editForm"].setAttribute("value", json.docs._id);
            } else {
                console.log(json.msg);
            }
        });

        xhr.send(null);
    }

    function triggerForm(bool, id = null, date = null) {
        let rowDate = document.getElementsByClassName("__date");
        let editForm = document.getElementsByClassName("__date-edit");

        function displayRowDate(v) {
            for(let i = 0; i < rowDate.length; i++ ) {
                rowDate[i].style.display = v;
            }
        }

        switch(bool) {
            case true: {
                displayRowDate("none");
                editForm[0].style.display = "block";
                break;
            }
            case false: {
                editForm[0].style.display = "none";
                displayRowDate("block");
                document.getElementById(id).innerHTML = `<a href="/admin/date/${id}">${getFormatDate(date)}</a>`;
                break;
            }
            default: {
                editForm[0].style.display = "none";
                displayRowDate("block");
                break;
            }
        }
    }

    document.getElementById("submitEditDate").addEventListener("click", function (e) {
        e.preventDefault();

        var newDate = document.forms["editForm"].querySelector(".datepicker");

        if(checkValue(newDate.value)) {
            var url = "/admin/date",
                xhr = new XMLHttpRequest(), // the XHR class instanse creation
                _id = document.forms["editForm"].getAttribute("value"),
                full_date = newDate.value,
                data = JSON.stringify({ _id, full_date });

            xhr.open("PUT", url, true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.addEventListener("load", function() {
                // receive ad parse the serve response
                var json = JSON.parse(xhr.response);

                if(xhr.readyState == 4 && xhr.status == 200) {
                    triggerForm(false, `td__${_id}`, full_date);
                } else {
                    console.log(json.msg);
                }
            });

            xhr.send(data);
        }
    });
    /*
    * End point `To edit the year selected`
    */
</script>
<%- include("layout/footer.ejs"); %>